{"ast":null,"code":"var _jsxFileName = \"/Users/vikram/Desktop/CS IA 2/frontend/src/components/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [id, setId] = useState('');\n  const upload = async () => {\n    const fd = new FormData();\n    fd.append('video', file);\n    const {\n      data\n    } = await axios.post('/api/upload', fd);\n    setId(data.id);\n    setStatus('processing');\n    checkStatus(data.id);\n  };\n  const checkStatus = async videoId => {\n    const {\n      data\n    } = await axios.get(`/api/task/${videoId}`);\n    setStatus(data.status);\n    if (data.status === 'processing') {\n      setTimeout(() => checkStatus(videoId), 2000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: upload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), status === 'done' && /*#__PURE__*/_jsxDEV(\"video\", {\n      src: `http://localhost:3001/api/result/${id}`,\n      controls: true,\n      width: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"tdIbijSqCGZ7iAvZh0NRUSDA3jE=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Upload","_s","file","setFile","status","setStatus","id","setId","upload","fd","FormData","append","data","post","checkStatus","videoId","get","setTimeout","children","type","accept","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","controls","width","_c","$RefreshReg$"],"sources":["/Users/vikram/Desktop/CS IA 2/frontend/src/components/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function Upload() {\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [id, setId] = useState('');\n\n  const upload = async () => {\n    const fd = new FormData();\n    fd.append('video', file);\n    const { data } = await axios.post('/api/upload', fd);\n    setId(data.id);\n    setStatus('processing');\n    checkStatus(data.id);\n  };\n\n  const checkStatus = async (videoId) => {\n    const { data } = await axios.get(`/api/task/${videoId}`);\n    setStatus(data.status);\n    if (data.status === 'processing') {\n      setTimeout(() => checkStatus(videoId), 2000);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\"video/*\" onChange={e => setFile(e.target.files[0])} />\n      <button onClick={upload}>Upload</button>\n      <p>{status}</p>\n      {status === 'done' && (\n        <video\n          src={`http://localhost:3001/api/result/${id}`}\n          controls\n          width=\"400\"\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,EAAE,EAAEC,KAAK,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAMY,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,EAAE,GAAG,IAAIC,QAAQ,CAAC,CAAC;IACzBD,EAAE,CAACE,MAAM,CAAC,OAAO,EAAET,IAAI,CAAC;IACxB,MAAM;MAAEU;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,aAAa,EAAEJ,EAAE,CAAC;IACpDF,KAAK,CAACK,IAAI,CAACN,EAAE,CAAC;IACdD,SAAS,CAAC,YAAY,CAAC;IACvBS,WAAW,CAACF,IAAI,CAACN,EAAE,CAAC;EACtB,CAAC;EAED,MAAMQ,WAAW,GAAG,MAAOC,OAAO,IAAK;IACrC,MAAM;MAAEH;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACmB,GAAG,CAAC,aAAaD,OAAO,EAAE,CAAC;IACxDV,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC;IACtB,IAAIQ,IAAI,CAACR,MAAM,KAAK,YAAY,EAAE;MAChCa,UAAU,CAAC,MAAMH,WAAW,CAACC,OAAO,CAAC,EAAE,IAAI,CAAC;IAC9C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEC,CAAC,IAAInB,OAAO,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjF7B,OAAA;MAAQ8B,OAAO,EAAErB,MAAO;MAAAU,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxC7B,OAAA;MAAAmB,QAAA,EAAId;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdxB,MAAM,KAAK,MAAM,iBAChBL,OAAA;MACE+B,GAAG,EAAE,oCAAoCxB,EAAE,EAAG;MAC9CyB,QAAQ;MACRC,KAAK,EAAC;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CApCuBD,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}